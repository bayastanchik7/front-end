// JavaScript программалоо тилинде map() методу орнотулган
// массив функциясы болуп саналат.Бул ыкма баштапкы массивдин
//  ар бир элементине берилген функцияны колдонуу менен жаңы
//  массивди түзөт.Ал баштапкы массивди өзгөртпөйт, бирок
//  трансформациялардын натыйжаларын камтыган жаңы массивди кайтарат.

// const numbers = [1, 2, 3, 4, 5];
// const doubledNumbers = numbers.map(function (number) {
//     return number * 2;
// });
// console.log(doubledNumbers);


// const numbers = [1, 2, 3, 4, 5];

// const doubledNumbers = numbers.map(number => number * 2);

// console.log(doubledNumbers);
// // Вывод: [2, 4, 6, 8, 10]
//////////////////////////////////////////////////////////////////////////////////////////////////////

// JavaScript программалоо тилинде filter() методу орнотулган массив
// функциясы болуп саналат.Бул ыкма баштапкы массивдин бардык элементтерин
// камтыган жаңы массивди түзөт, алар үчүн кайра чалуу функциясы чындыкты
// кайтарат.Ал ошондой эле баштапкы массивди өзгөртпөйт.

// const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
// // Использование метода filter для выбора четных чисел
// const evenNumbers = numbers.filter(function (number) {
//     return number % 2 === 0;
// });
// console.log(evenNumbers);
// // Вывод: [2, 4,


// const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

// const evenNumbers = numbers.filter(number => number % 2 === 0);

// console.log(evenNumbers);
// // Вывод: [2, 4, 6, 8, 10]
//////////////////////////////////////////////////////////////////////////////////////////////////////////

// JavaScript'те splice() методу массив ыкмасы болуп саналат жана
// учурдагы элементтерди алып салуу же алмаштыруу жана / же массивге
// жаңы элементтерди кошуу аркылуу массивдин мазмунун өзгөртүү үчүн колдонулат.

// const fruits = ['apple', 'banana', 'orange', 'grape'];

// Удалить 1 элемент начиная с индекса 2
// fruits.splice(2, 1);

// console.log(fruits);
// Вывод: ['apple', 'banana', 'grape']

// Вставить 'kiwi' начиная с индекса 1, не удалять элементы
// fruits.splice(1, 0, 'kiwi');
//
// console.log(fruits);
// Вывод: ['apple', 'kiwi', 'banana', 'grape']

// Заменить 2 элемента начиная с индекса 0
// fruits.splice(0, 2, 'pear', 'melon');

// console.log(fruits);
// Вывод: ['pear', 'melon', 'banana', 'grape']
/////////////////////////////////////////////////////////////////////////////////////////////////////////
// JavaScript программалоо тилинде сап көбүнчө тексттик маалыматты
// көрсөтүү үчүн колдонулган символдордун ырааттуулугу болуп саналат
// JavaScript'те саптар жалгыз ('), кош(") же арткы тырмакчалар
// () аркылуу түзүлүшү мүмкүн.Бул жерде кээ бир мисалдар келтирилген:

// let singleQuotes = 'Это строка с одинарными кавычками.';
// let doubleQuotes = "Это строка с двойными кавычками.";
// let backticks = `Это строка с обратными кавычками.`;
  

// let firstName = 'John';
// let lastName = 'Doe';

// // Конкатенация строк
// let fullName = firstName + ' ' + lastName; // 'John Doe'

// // Интерполяция строк с использованием обратных кавычек
// let greeting = `Привет, ${fullName}!`; // 'Привет, John Doe!'

// // Получение длины строки
// let length = fullName.length; // 8

// // Доступ к символам строки по индексу
// let firstCharacter = fullName[0]; // 'J'
//////////////////////////////////////////////////////////////////////////////////////////////////////

























