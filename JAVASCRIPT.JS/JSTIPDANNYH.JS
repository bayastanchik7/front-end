                      // STRING //

// JavaScript ошондой эле charAt(), substring(), indexOf(),
// toLowerCase(), toUpperCase(), split() жана башкалар
// сыяктуу саптар менен иштөөнүн көптөгөн ыкмаларына ээ
// Бул ыкмалар саптын символдору жана ички саптары боюнча
// ар кандай операцияларды аткарууга мүмкүндүк берет.

                       // NUMBER //
                
// JavaScript ошондой эле сандар менен иштөө үчүн пайдалуу ыкмаларды
// жана касиеттерди камтыган глобалдык Number объектисин берет.Мисалы
// Number.parseInt(), Number.parseFloat(), Number.isNaN(), Number
// .isInteger() жана башкалар.


                      // BOOLEAN //
                     
// JavaScript программалоо тилинде, "bolean" маалымат түрү
// чыныгы же жалган болушу мүмкүн болгон логикалык маани болуп
// саналат.Логикалык маанилер көбүнчө шарттуу билдирүүлөр менен
//  логикалык туюнтмаларда программанын аткарылышын көзөмөлдөө үчүн колдонулат.

                      // UNDEFINED //
                 
// JavaScript программалоо тилинде, аныкталбаган - бул өзгөрмөгө
// башка маани ыйгарылбаган учурда ыйгарылган өзгөчө маани.Ошондой
// эле, функция эч кандай маанини ачык кайтарбаганда аныкталбаган кайтарылат.

                        //BEGINT//

                           

                        // SUMBOL //
                       
// JavaScript'те символ ECMAScript 6 (ES6) версиясында киргизилген алгачкы
// маалымат түрү.Бул уникалдуу идентификаторлорду түзүү үчүн колдонулат
// Символдор көбүнчө объекттерге жеке касиеттерди кошуу үчүн же объект
// касиеттеринде ачкыч катары колдонулат.
// Символдор көбүнчө аталыштардын кагылышуусу коркунучу жок объекттерге
// касиеттерди кошуу үчүн колдонулат.Алар for...in циклдеринде саналбайт
// жана объекттеги башка касиеттерге кийлигишпейт.


                           //NUL //

// JavaScript'те "null", null кандайдыр бир объект маанисинин атайылап
// жоктугун билдирген өзгөчө маани.Бул JavaScriptдеги примитивдүү маалымат түрлөрүнүн бири.
// null көбүнчө өзгөрмө же объект касиети эч кандай мааниге ээ болбошу керек
// же эч нерсени көрсөтпөшү керектигин ачык көрсөтүү үчүн колдонулат.Бул аныкталбагандан
// айырмаланып турат, бул адатта өзгөрмө жарыяланганын, бирок эч кандай маани берилбегенин билдирет.


                        // OBJEKT //

// JavaScript - те объект бул ачкыч - маани жуптарын колдонуу менен маалыматтарды
// сактоого жана уюштурууга мүмкүндүк берген маалымат структурасы.Объекттер JavaScriptдеги
// негизги маалымат түрлөрүнүн бири жана татаал маалымат структураларын көрсөтүү жана
// башкаруу үчүн кеңири колдонулат.
// Сиз ошондой эле Объект конструкторун колдонуп же конструктор функциясын аныктоо 
// жана new ачкыч сөздү колдонуу менен объекттерди түзө аласыз.Кошумча, JavaScript 
// прототиптик мурасты колдойт, бул объекттерге башка объекттерден касиеттерди жана 
// ыкмаларды мурастоого мүмкүндүк берет.


                      